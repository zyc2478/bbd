#Copyright (c) SkyWalker Studio, modified date is 2018-06-14 13:42
#Thu Jun 14 13:42:40 CST 2018
###¡î 1:only bid,2:only debt,3:all ,debt mode must be modified ###
bid_mode=1
bid_by_time=1

### if bid_by_time=1,it works. h:hour m:minute,d:day, p:period(from last run) ###
time_interval=d

### write log to db ###
log_to_db=1

### run 1 time every run_interval seconds ###
run_interval=2


##+++++++++++++++++++++  Bid Strategy +++++++++++++++++++++##

### final bid amount = min_bid_amount + bid_level_amount * (mini/medium/multiple/more) ###
min_bid_amount=108
bid_level_amount=20
multiple=2
more_multiple=3
mini_multiple=1.2
medium_multiple=1.5

### ¡î if credit_range=1,credit must from creit_limit,exp:if 1,B,than B,C,D...; if 0,B,than only B ###
credit_range=0
credit_limit=B

### ¡î 0:unknow, 1:male, 2:female, 3:ignore the parameter ###
gender=2

### ¡î cetificate validation check, 1:must certificate, 0:ignore ###
certificate_check=1

### ¡î overdue less must less than it ###
overdue_less_limit=2

### ¡î for male/female,age must greater than min_age, and less than max age ###
min_mage=24
max_mage=37
min_fage=18
max_fage=28

### ¡î owingAmount / highestPrincipal must less than it ###
owing_rate=0.3

### ¡î debtRate: totalPrincipal != 0 ? (owingAmount + loanAmount) / totalPrincipal : 1;
debt_mrate=0.2
debt_frate=0.3

### overdue_less / normal_count,for female,if overdue_rate=0.1,overdue_frate=1.9,than the final rate is 0.19 ###
overdue_rate=0.1
overdue_frate=1.9

### the borrower bid amount must greater than begin and less than end ###
amount_begin=1000
amount_end=50000

### total borrow amount must greater then it ###
total_limit=5000

### total owing amount must less then it ###
owing_limit=5000

### for male/female,the borrow days from last borrow is better greater than short_days, greater than long_days is the best ###
short_mdays=30
long_mdays=60
short_fdays=21
long_fdays=45

### for common bid,SuccessCount and NormalCount(pay off times) must greater it  ###
success_limit=6
normal_limit=80

### for male/female,must use it * ns_rate:(normalCount + overdueLessCount + overdueMoreCount)/ successCount;
nscount_mrate=3.3
nscount_frate=2

### determine if the borrower is beginner, borrow times must less than it ###
begin_limit=3

### check groups number ###
bbd_groups=1000


##+++++++++++++++++++++  Debt Strategy +++++++++++++++++++++##
### 1:run overdue & no-overdue debt one by one, 0:only overdue(include non-overdue) ###
debt_mix=1
### 1:can include overdue 0:only non-overdue ###
debt_overdue_switch=1
### sale rate must greater than the it ###
debt_sale_rate=18
### debt price must greater than it ###
debt_min_price=30
### debt price must less than it ###
debt_price_limit=200
### debt price premium must less than it ###
debt_prefer_limit=10
### debt overdue days must less than it ###
debt_overdue_limit=1
### debt credit must greater than it,if B,it works on B,C,D... ###
debt_credit_limit=B
### debt total check groups number ###
debt_groups=1000


##+++++++++++++++++++++  Authenticate Information +++++++++++++++++++++##
code=6cde2f4b83be4d1a849491f407cf591b
open_id=0d2283b0fa334d14894180520c26a865
expire_days=6
refresh_token_expired=90
init_flag=1
init_date=2018-06-08 16\:05
token=fc068e82-6867-4d2c-9953-8fd18f7cbd85
refresh_token=27b808f1-e3f6-42f2-bcb1-328d80303ac1
